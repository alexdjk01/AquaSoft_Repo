Tasks Done : 
        Partial (50%) SQL table creation / test data values insertion
        Created Users model and link it to the Sequelize module
        Created User Service 
        +
        Created hotelOffers model 
        Backend logic in hotel.service.ts: to get all/one offers, create, update, delete [findAllOffers(), findAllOffersById(), issueOffer(), removeOfferById(), updateOfferById() ]
        Backend logic in hotel.controller.ts: route to: retrieve all/one hotelOffers, create, update, delete [@Get('findAllOffers'), Get('getOfferById/:id'), @Post('addOffer'), @Put('updateOffer/:id'), @Delete('deleteOfferById:/id')]
        Token generations
        Link table + Model + routes (magic links generation and retrieve) 50%


        Frontend:
        Register/Login pages | Without UI design yet
        apiClient that links front with backend
        Token decoded and saved into localStorage
        Navbar
        Buttons on Navbar logic and implementation (for navigation) 50%

        Manage offers using Hotel Page by hotel managers after clicking link:
                Hotel managers can now interact with the offers from their hotel (CRUD operations)
                new service and controller route for retrieving, delete, update, create offers 
                
